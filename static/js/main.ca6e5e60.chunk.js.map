{"version":3,"sources":["redux/todos/todos-actions.js","redux/todos/todos-reducer.js","redux/store.js","service/fetchApi.js","redux/todos/todos-operation.js","components/Spinner/loading-selector.js","components/Spinner/StyledComponent.js","components/Spinner/Spinner.js","components/TodoList/todos-selector.js","components/TodoList/StyledComponent.js","image/cardHeader.jpg","components/TodoList/TodoList.js","components/TodoCreateForm/StyledComponent.js","components/TodoCreateForm/TodoCreateForm.js","app.js","index.js"],"names":["getAllTodoRequest","createAction","getAllTodoSuccess","getAllTodoError","addTodoRequest","addTodoSuccess","addTodoError","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","editTodoRequest","editTodoSuccess","editTodoError","todoReducer","createReducer","action","_","payload","state","filter","item","id","map","loaderReducer","errorReducer","todoRootReducer","combineReducers","items","loader","error","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","todo","devTools","process","axios","defaults","baseURL","params","per_page","fetchAddItem","post","fetchDeleteItem","delete","fetchEditItem","update","patch","editItem","dispatch","a","first_name","last_name","email","response","data","isLoadingValue","Wrapper","styled","div","Spinner","width","height","type","allTodos","useStyles","makeStyles","root","maxWidth","inputText","marginBottom","fontSize","formButton","CardList","ul","CardItem","li","Form","textarea","form","ToDoList","useSelector","classes","useDispatch","useForm","control","handleSubmit","useState","isOpenEditor","setIsOpenEditor","itemsOnEdit","setItemsOnEdit","onSubmit","console","log","Card","className","CardActionArea","CardMedia","component","alt","image","avatar","bg_header","title","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","onClick","deleteItem","handlerEditItem","name","defaultValue","render","onChange","value","TextField","label","required","theme","buttonSubmit","ToDoCreateForm","reset","App","isLoading","useEffect","get","AppRender","ReactDom","document","querySelector"],"mappings":"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","file":"static/js/main.ca6e5e60.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const getAllTodoRequest = createAction('todo/getAllRequest');\nexport const getAllTodoSuccess = createAction('todo/getAllSuccess');\nexport const getAllTodoError = createAction('todo/getAllError');\n\nexport const addTodoRequest = createAction('todo/addItemRequest');\nexport const addTodoSuccess = createAction('todo/addItemSuccess');\nexport const addTodoError = createAction('todo/addItemError');\n\nexport const deleteTodoRequest = createAction('todo/deleteItemRequest');\nexport const deleteTodoSuccess = createAction('todo/deleteItemSuccess');\nexport const deleteTodoError = createAction('todo/deleteItemError');\n\nexport const editTodoRequest = createAction('todo/editItemRequest');\nexport const editTodoSuccess = createAction('todo/editItemSuccess');\nexport const editTodoError = createAction('todo/editItemError');\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport * as action from './todos-actions';\n\nconst todoReducer = createReducer([], {\n  [action.getAllTodoSuccess]: (_, { payload }) => payload,\n  [action.addTodoSuccess]: (state, { payload }) => [...state, payload],\n  [action.deleteTodoSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload.id),\n  [action.editTodoSuccess]: (state, { payload }) =>\n    state.map(item => (item.id === payload.id ? payload : item)),\n});\n\nconst loaderReducer = createReducer(false, {\n  [action.getAllTodoRequest]: () => true,\n  [action.getAllTodoSuccess]: () => false,\n  [action.getAllTodoError]: () => false,\n  [action.addTodoRequest]: () => true,\n  [action.addTodoSuccess]: () => false,\n  [action.addTodoError]: () => false,\n  [action.deleteTodoRequest]: () => true,\n  [action.deleteTodoSuccess]: () => false,\n  [action.deleteTodoError]: () => false,\n  [action.editTodoRequest]: () => true,\n  [action.editTodoSuccess]: () => false,\n  [action.editTodoError]: () => false,\n});\n\nconst errorReducer = createReducer(null, {\n  [action.getAllTodoError]: (_, { payload }) => payload,\n  [action.addTodoError]: (_, { payload }) => payload,\n  [action.deleteTodoError]: (_, { payload }) => payload,\n  [action.editTodoError]: (_, { payload }) => payload,\n});\n\nconst todoRootReducer = combineReducers({\n  items: todoReducer,\n  loader: loaderReducer,\n  error: errorReducer,\n});\n\nexport { todoRootReducer };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { todoRootReducer } from './todos/todos-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    todo: todoRootReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport default store;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://reqres.in/api'; // https://reqres.in/api/users?page=2&per_page=4\naxios.defaults.params = {\n  per_page: 4,\n};\n\nexport const fetchGetTodo = () => {\n  return axios.get('/users?page=1');\n};\n\nexport const fetchAddItem = item => {\n  return axios.post('/users', item);\n};\n\nexport const fetchDeleteItem = item => {\n  return axios.delete(`/users/${item.id}`);\n};\n\nexport const fetchEditItem = (id, update) => {\n  return axios.patch(`/users/${id}`, update);\n};\n","import * as action from './todos-actions';\nimport {\n  fetchGetTodo,\n  fetchAddItem,\n  fetchDeleteItem,\n  fetchEditItem,\n} from '../../service/fetchApi';\n\nexport const getAllItem = () => async dispatch => {\n  dispatch(action.getAllTodoRequest());\n  try {\n    const response = await fetchGetTodo();\n    const { data } = response.data;\n    dispatch(action.getAllTodoSuccess(data));\n  } catch (error) {\n    dispatch(action.getAllTodoError(error));\n  }\n};\n\nexport const addItem = item => async dispatch => {\n  dispatch(action.addTodoRequest());\n  try {\n    const { data } = await fetchAddItem(item);\n    dispatch(action.addTodoSuccess(data));\n  } catch (error) {\n    dispatch(action.addTodoError(error));\n  }\n};\n\nexport const deleteItem = item => async dispatch => {\n  dispatch(action.deleteTodoRequest());\n  try {\n    const response = await fetchDeleteItem(item);\n    dispatch(action.deleteTodoSuccess(item));\n  } catch (error) {\n    dispatch(action.deleteTodoError(error));\n  }\n};\n\nexport const editItem = item => async dispatch => {\n  const { first_name, last_name, email, id } = item;\n  const update = {\n    first_name,\n    last_name,\n    email,\n    id,\n  };\n\n  dispatch(action.editTodoRequest());\n  try {\n    const response = await fetchEditItem(id, update);\n    const { data } = response;\n    dispatch(action.editTodoSuccess(data));\n  } catch (error) {\n    dispatch(action.editTodoError(error));\n  }\n};\n","export const isLoadingValue = state => state.todo.loader;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport { Wrapper };\n","import Loader from 'react-loader-spinner';\nimport { Wrapper } from './StyledComponent';\n\nexport function Spinner() {\n  return (\n    <Wrapper>\n      <Loader width={100} height={75} type=\"Grid\" />\n    </Wrapper>\n  );\n}\n","export const allTodos = state => state.todo.items;\n","import { makeStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '100%',\n  },\n  inputText: {\n    width: '80%',\n    marginBottom: 20,\n    fontSize: '1.7rem',\n  },\n  formButton: {\n    height: '40px',\n    width: '80%',\n    fontSize: '1.7rem',\n    marginBottom: 10,\n  },\n});\n\nconst CardList = styled.ul`\n  margin: 0 auto;\n  max-width: 900px;\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nconst CardItem = styled.li`\n  position: relative;\n  width: 400px;\n  margin-bottom: 30px;\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n  transition: 0.3s ease-in;\n  transition-property: box-shadow transform;\n  &:hover {\n    box-shadow: 19px 18px 10px -1px rgba(125, 86, 249, 0.7);\n    transform: translate(5px, 5px);\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 80%;\n  height: 100px;\n  resize: none;\n  margin-bottom: 20px;\n  font-size: 1.6rem;\n  outline: none;\n  border: solid 2px #000000;\n  border-radius: 5px;\n  padding: 10px;\n  :focus {\n    border-color: blueviolet;\n  }\n`;\n\nconst Form = styled.form`\n  padding: 20px 0px 20px;\n  position: absolute;\n  bottom: -45px;\n  background-color: #aac3c3;\n  border: none;\n  width: 400px;\n  margin: 0 auto 50px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\nexport { useStyles, CardItem, CardList, Form, TextArea };\n","export default __webpack_public_path__ + \"static/media/cardHeader.7981c59e.jpg\";","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextField } from '@material-ui/core';\n\nimport { allTodos } from './todos-selector';\nimport { useStyles, CardItem, CardList, Form } from './StyledComponent';\nimport bg_header from '../../image/cardHeader.jpg';\nimport { deleteItem, editItem } from '../../redux/todos/todos-operation';\n\nexport function ToDoList() {\n  const items = useSelector(allTodos);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit } = useForm();\n\n  let [isOpenEditor, setIsOpenEditor] = useState(false);\n  let [itemsOnEdit, setItemsOnEdit] = useState(null);\n\n  const handlerEditItem = item => {\n    setIsOpenEditor(true);\n    setItemsOnEdit(item);\n  };\n\n  const onSubmit = data => {\n    if (!editItem) {\n      return;\n    }\n    data.id = itemsOnEdit.id;\n    console.log(data);\n    dispatch(editItem(data));\n    setIsOpenEditor(false);\n  };\n\n  return (\n    <CardList>\n      {items.map(item => (\n        <CardItem key={item.id}>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt=\"Contemplative Reptile\"\n                height=\"140\"\n                image={item.avatar ? item.avatar : bg_header}\n                title=\"Contemplative Reptile\"\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {item.first_name}\n                </Typography>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {item.last_name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {item.email}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => dispatch(deleteItem(item))}\n              >\n                Delete\n              </Button>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => handlerEditItem(item)}\n              >\n                Edit\n              </Button>\n            </CardActions>\n          </Card>\n          {isOpenEditor && item.id === itemsOnEdit.id && (\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <Controller\n                name=\"first_name\"\n                control={control}\n                defaultValue={item.first_name}\n                render={({ onChange, value }) => (\n                  <TextField\n                    className={classes.inputText}\n                    onChange={onChange}\n                    value={value}\n                    label=\"first name\"\n                    variant=\"outlined\"\n                    required\n                  />\n                )}\n              />\n              <Controller\n                name=\"last_name\"\n                control={control}\n                defaultValue={item.last_name}\n                render={({ onChange, value }) => (\n                  <TextField\n                    className={classes.inputText}\n                    onChange={onChange}\n                    value={value}\n                    label=\"last name\"\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n              <Controller\n                name=\"email\"\n                control={control}\n                defaultValue={item.email}\n                render={({ onChange, value }) => (\n                  <TextField\n                    className={classes.inputText}\n                    onChange={onChange}\n                    value={value}\n                    label=\"email\"\n                    variant=\"outlined\"\n                  />\n                )}\n              />\n              <Button\n                className={classes.formButton}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Save\n              </Button>\n              <Button\n                onClick={() => setIsOpenEditor(false)}\n                className={classes.formButton}\n                variant=\"contained\"\n              >\n                Cancel\n              </Button>\n            </Form>\n          )}\n        </CardItem>\n      ))}\n    </CardList>\n  );\n}\n","import styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  inputText: {\n    width: '80%',\n    marginBottom: 20,\n    fontSize: '1.7rem',\n  },\n  buttonSubmit: {\n    height: '40px',\n    width: '80%',\n    fontSize: '1.7rem',\n  },\n}));\n\nconst TextArea = styled.textarea`\n  width: 80%;\n  height: 100px;\n  resize: none;\n  margin-bottom: 20px;\n  font-size: 1.6rem;\n  outline: none;\n  border: solid 2px #000000;\n  border-radius: 5px;\n  padding: 10px;\n  :focus {\n    border-color: blueviolet;\n  }\n`;\n\nconst Form = styled.form`\n  width: 400px;\n  margin: 0 auto 50px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nexport { Form, useStyles, TextArea };\n","import { useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { TextField, Button } from '@material-ui/core';\nimport { Form, useStyles, TextArea } from './StyledComponent';\nimport { addItem } from '../../redux/todos/todos-operation';\n\nexport function ToDoCreateForm() {\n  const { control, handleSubmit, reset } = useForm();\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(addItem(data));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"first_name\"\n        control={control}\n        defaultValue=\"\"\n        render={({ onChange, value }) => (\n          <TextField\n            className={classes.inputText}\n            onChange={onChange}\n            value={value}\n            label=\"first name\"\n            variant=\"outlined\"\n            required\n          />\n        )}\n      />\n      <Controller\n        name=\"last_name\"\n        control={control}\n        defaultValue=\"\"\n        render={({ onChange, value }) => (\n          <TextField\n            className={classes.inputText}\n            onChange={onChange}\n            value={value}\n            label=\"last name\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n      <Controller\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        render={({ onChange, value }) => (\n          <TextField\n            className={classes.inputText}\n            onChange={onChange}\n            value={value}\n            label=\"email\"\n            variant=\"outlined\"\n          />\n        )}\n      />\n      <Button\n        className={classes.buttonSubmit}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Create\n      </Button>\n    </Form>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getAllItem } from './redux/todos/todos-operation';\nimport { Spinner } from './components/Spinner';\nimport { isLoadingValue } from './components/Spinner';\nimport { ToDoList } from './components/TodoList';\nimport { ToDoCreateForm } from './components/TodoCreateForm';\n\nexport default function App() {\n  let isLoading = useSelector(isLoadingValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllItem());\n  }, []);\n\n  return (\n    <>\n      <ToDoCreateForm />\n      <ToDoList />\n      {isLoading && <Spinner />}\n    </>\n  );\n}\n","import ReactDom from 'react-dom';\nimport '@csstools/normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './base.css';\nimport App from './app';\n\nfunction AppRender() {\n  return (\n    <>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </>\n  );\n}\n\nReactDom.render(<AppRender />, document.querySelector('#root'));\n"],"sourceRoot":""}